@model RecipeCube.Areas.Admin.ViewModels.InventoryViewModel

<div class="row">
    <div class="col-xl-8 col-lg-9 col-md-10 mx-auto">
        <div class="w-100">
            <form id="createForm" asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="GroupName" class="control-label"></label>
                    <select asp-for="GroupId" class="form-control mb-3" id="groupId">
                        @foreach (var item in ViewBag.Groups)
                        {
                            <option value="@item.GroupId">@item.GroupName</option>
                        }
                    </select>
                    <span asp-validation-for="GroupId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="UserName" class="control-label"></label>
                    <select asp-for="UserId" class="form-control mb-3" id="userId" readonly></select>
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SelectedIngredients" class="control-label"></label>
                    <select asp-for="SelectedIngredients" class="form-control select2-multiple" id="selectedIngredients" name="SelectedIngredients" multiple="multiple">
                        @foreach (var ingredient in Model.AvailableIngredients)
                        {
                            <option value="@ingredient.IngredientId">@ingredient.IngredientName</option>
                        }
                    </select>
                    <span asp-validation-for="SelectedIngredients" class="text-danger"></span>
                </div>
                <!-- 食材數量輸入框 (動態生成) -->
                <div class="form-group" id="ingredientQuantities">
                    @foreach (var selectedIngredient in Model.SelectedIngredients)
                    {
                        var ingredientName = Model.AvailableIngredients.FirstOrDefault(i => i.IngredientId == selectedIngredient)?.IngredientName;
                        var unit = Model.IngredientUnits.ContainsKey(selectedIngredient) ? Model.IngredientUnits[selectedIngredient] : "";

                        <div class="form-group">
                            <label for="IngredientQuantities_@selectedIngredient" class="control-label">
                                @ingredientName 的數量 (@unit)
                            </label>
                            <input type="number" step="0.1" class="form-control" id="IngredientQuantities_@selectedIngredient" name="IngredientQuantities[@selectedIngredient]" />
                        </div>
                    }
                </div>
                <div class="form-group">
                    <label asp-for="ExpiryDate" class="control-label"></label>
                    <input asp-for="ExpiryDate" class="form-control" type="date" id="expiryDate" />
                    <span asp-validation-for="ExpiryDate" class="text-danger" id="expiryDateSpan"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IsExpiring" class="control-label"></label>
                    <input asp-for="IsExpiring" class="form-control" id="isExpiring" readonly />
                    <span asp-validation-for="IsExpiring" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Visibility" class="control-label"></label>
                    <select asp-for="Visibility" class="form-control mb-3">
                        <option value="true">群組可見</option>
                        <option value="false">僅本人可見</option>
                    </select>
                    <span asp-validation-for="Visibility" class="text-danger"></span>
                </div>
                <div class="d-flex justify-content-center">
                    <input type="submit" value="新增" class="btn btn-info me-3" />
                    <a asp-action="Index" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">回到列表</a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- 在局部檢視內包含腳本 -->
<script>
    $(document).ready(function () {
        // 重新解析驗證規則
        $.validator.unobtrusive.parse('#createForm');

        // 根據所選群組更改User select內容
        $('#groupId').on('change', function () {
            $('#userId').prop('readonly', false); // 正確設置 readonly 屬性
            let selectedGroup = $(this).val();
            $('#userId').empty().append('<option value="">-- 選擇用戶 --</option>'); // 清空用戶選項並添加提示
            @foreach (var item in ViewBag.Users)
            {
                <text>
                    if (selectedGroup == '@item.GroupId') {
                        $('#userId').append('<option value="@item.Id">@item.UserName</option>');
                    }
                </text>
            }
        }).trigger('change');

        // 搜尋
        $('#selectedIngredients').select2({
            placeholder: '選擇食材',
            allowClear: true,
            width: '100%',
            ajax: {
                url: '/Admin/Recipes/SearchIngredients',  // 後端控制器路徑
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        query: params.term // 搜尋的關鍵字
                    };
                },
                processResults: function (data) {
                    // 分組顯示資料
                    var categories = {};

                    // 將食材依照類別分類
                    data.forEach(function (ingredient) {
                        if (!categories[ingredient.category]) {
                            categories[ingredient.category] = [];
                        }
                        var unitText = ingredient.unit ? ` (${ingredient.unit})` : ''; // 確保單位不為空
                        categories[ingredient.category].push({
                            id: ingredient.ingredientId,
                            text: ingredient.ingredientName + unitText  // 顯示名稱與單位
                        });
                    });

                    // 將分類轉換為 Select2 支援的格式
                    var results = [];
                    for (var category in categories) {
                        results.push({
                            text: category,
                            children: categories[category]
                        });
                    }

                    return {
                        results: results
                    };
                },
                cache: true
            }
        });

        // 當使用者選擇食材時，動態生成對應的數量輸入框
        $('#selectedIngredients').on('change', function () {
            var selectedIngredients = $(this).select2('data');  // 獲取已選擇的食材

            // 清空原有的數量輸入框
            $('#ingredientQuantities').empty();

            // 為每個選擇的食材創建一個對應的數量輸入框，顯示名稱而不是ID
            selectedIngredients.forEach(function (ingredient) {
                var ingredientId = ingredient.id;
                var ingredientNameWithUnit = ingredient.text;

                var inputHtml = `
                        <div class="form-group">
                            <label for="IngredientQuantities_${ingredientId}" class="control-label">${ingredientNameWithUnit} 的數量</label>
                            <input type="number" step="0.1" class="form-control" id="IngredientQuantities_${ingredientId}" name="IngredientQuantities[${ingredientId}]" />
                        </div>`;
                $('#ingredientQuantities').append(inputHtml);
            });
        });

        // 動態控制有效日期
        $('#expiryDate').on('change', function () {
            const today = new Date();
            const selectedDate = new Date($(this).val());

            if (selectedDate < today.setHours(0, 0, 0, 0)) {
                $(this).val('');
                $('#expiryDateSpan').html('日期不能小於今日日期');
            } else {
                $('#expiryDateSpan').html('');

                // 計算剩餘天數，並檢查是否小於等於 3 天
                const differenceInTime = selectedDate.getTime() - today.getTime();
                const differenceInDays = Math.ceil(differenceInTime / (1000 * 3600 * 24)); // 轉換為天數

                if (differenceInDays <= 3) {
                    $('#isExpiring').val('true'); // 設置為字符串 'true'
                } else {
                    $('#isExpiring').val('false'); // 設置為字符串 'false'
                }
            }
        });
    });
</script>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}