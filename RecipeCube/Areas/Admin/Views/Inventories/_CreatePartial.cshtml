@model RecipeCube.Areas.Admin.ViewModels.InventoryViewModel

<div class="row">
    <div class="col-xl-8 col-lg-9 col-md-10 mx-auto">
        <div class="w-100">
            <form id="createForm" asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="GroupName" class="control-label"></label>
                    <select asp-for="GroupId" class="form-control mb-3" id="groupId">
                        <option value="">-- 選擇群組 --</option>
                        @foreach (var item in Model.Groups)
                        {
                            <option value="@item.GroupId">@item.GroupName</option>
                        }
                    </select>
                    <span asp-validation-for="GroupId" class="text-danger" id="groupIdSpan"></span>
                </div>
                <div class="form-group">
                    <label asp-for="UserName" class="control-label"></label>
                    <select asp-for="UserId" class="form-control mb-3" id="userId" disabled>
                        <option value="">-- 選擇用戶 --</option>
                    </select>
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SelectedIngredients" class="control-label"></label>
                    <select asp-for="SelectedIngredients" class="form-control select2-multiple" id="selectedIngredients" name="SelectedIngredients" multiple="multiple">
                        @foreach (var categoryGroup in Model.AvailableIngredients.GroupBy(i => i.Category))
                        {
                            <optgroup label="@categoryGroup.Key">
                                @foreach (var ingredient in categoryGroup)
                                {
                                    <option value="@ingredient.IngredientId">@ingredient.IngredientName (@ingredient.Unit)</option>
                                }
                            </optgroup>
                        }
                    </select>
                    <span asp-validation-for="SelectedIngredients" class="text-danger"></span>
                </div>
                <!-- 食材數量輸入框 (動態生成) -->
                <div class="form-group" id="ingredientQuantities"></div>
                <!-- 食材到期日輸入框 (動態生成) -->
                <div class="form-group" id="ingredientExpiryDates"></div>
                <!-- 食材即將到期 (動態生成) -->
                <div class="form-group" id="ingredientIsExpiring"></div>
                <!-- 食材可見性 (動態生成) -->
                <div class="form-group" id="ingredientVisibility"></div>
                <div class="d-flex justify-content-center">
                    <input type="submit" value="新增" class="btn btn-info me-3" />
                    <a asp-action="Index" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">回到列表</a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- 在局部檢視內包含腳本 -->
<script>
    $(document).ready(function () {
        // 重新解析驗證規則
        $.validator.unobtrusive.parse('#createForm');

        // 根據所選群組更改User select內容
        $('#groupId').on('change', function () {
            $('#userId').prop('disabled', false);
            let selectedGroup = $(this).val();
            $('#userId').empty().append('<option value="">-- 選擇用戶 --</option>');
                @foreach (var item in Model.Users)
                {
                    <text>
                        if (selectedGroup == '@item.GroupId') {
                            $('#userId').append('<option value="@item.Id">@item.UserName</option>');
                        };
                    </text>
                }
        }).trigger('change');

        // 搜尋
        $('#selectedIngredients').select2({
            placeholder: '選擇食材',
            allowClear: true,
            width: '100%'
        });

        // 當使用者選擇食材時，動態生成對應的數量輸入框
        $('#selectedIngredients').on('change', function () {
            var selectedIngredients = $(this).select2('data');  // 獲取已選擇的食材

            // 清空原有的數量輸入框
            $('#ingredientQuantities').empty();
            $('#ingredientExpiryDates').empty();
            $('#ingredientIsExpiring').empty();
            $('#ingredientVisibility').empty();

            // 為每個選擇的食材創建一個對應的數量輸入框，顯示名稱而不是ID
            selectedIngredients.forEach(function (ingredient) {
                var ingredientId = ingredient.id;
                var ingredientName = ingredient.text.split(' ')[0];

                var inputHtml_Quantity = `
                            <div>
                            <label for="IngredientQuantities_${ingredientId}" class="control-label">${ingredientName} 的數量</label>
                            <input type="number" step="0.1" class="form-control" id="IngredientQuantities_${ingredientId}" name="IngredientQuantities[${ingredientId}]"/>
                            <span class="text-danger" id="IngredientQuantitySpan_${ingredientId}"></span>
                            </div>`;

                var inputHtml_ExpiryDate = `
                            <div>
                            <label for="IngredientExpiryDate_${ingredientId}" class="control-label">${ingredientName} 的到期日</label>
                            <input type="date" class="form-control" id="IngredientExpiryDate_${ingredientId}" name="IngredientExpiryDate[${ingredientId}]"/>
                            <span class="text-danger" id="IngredientExpiryDateSpan_${ingredientId}"></span>
                            </div>`;

                var inputHtml_IsExpiring = `
                            <div>
                            <label for="IngredientIsExpiring_${ingredientId}" class="control-label">${ingredientName} 即將到期</label>
                            <input class="form-control" id="IngredientIsExpiring_${ingredientId}" name="IngredientIsExpiring[${ingredientId}]" readonly/>
                            <span class="text-danger" id="IngredientIsExpiringSpan_${ingredientId}"></span>
                            </div>`;

                var inputHtml_Visibility = `
                            <div>
                            <label for="IngredientVisibility_${ingredientId}" class="control-label">${ingredientName} 的可見性</label>
                            <select class="form-control mb-3" id="IngredientVisibility_${ingredientId}" name="IngredientVisibility[${ingredientId}]" />
                                <option value="true">群組可見</option>
                                <option value="false">僅本人可見</option>
                            </select>
                            <span class="text-danger" id="IngredientVisibilitySpan_${ingredientId}"></span>
                                </div>`;

                $('#ingredientQuantities').append(inputHtml_Quantity);
                $('#ingredientExpiryDates').append(inputHtml_ExpiryDate);
                $('#ingredientIsExpiring').append(inputHtml_IsExpiring);
                $('#ingredientVisibility').append(inputHtml_Visibility);

                $(`#IngredientQuantities_${ingredientId}`).on('change', function () {
                    const quantityInput = parseFloat($(`#IngredientQuantities_${ingredientId}`).val());  // 將輸入值轉換為數字
                    const quantitySpan = $(`#IngredientQuantitySpan_${ingredientId}`);

                    // 檢查數量是否在範圍內，以及小數位是否僅為1位
                    if (isNaN(quantityInput) || quantityInput < 0.1 || quantityInput > 10000 || !/^\d+(\.\d{1})?$/.test(quantityInput)) {
                        $(this).val('');  // 清空輸入框
                        quantitySpan.html('數量必須在0.1到10000之間，且只能有一位小數');
                    } else {
                        $(this).val(quantityInput.toFixed(1));  // 限制為一位小數
                        quantitySpan.html('');  // 清空錯誤訊息
                    }
                });

                $(`#IngredientExpiryDate_${ingredientId}`).on('change', function () {
                    const today = new Date();
                    const selectedDate = new Date($(this).val());
                    const isExpiringInput = $(`#IngredientIsExpiring_${ingredientId}`);
                    const expiryDateSpan = $(`#IngredientExpiryDateSpan_${ingredientId}`);

                    if (selectedDate < today.setHours(0, 0, 0, 0)) {
                        $(this).val('');
                        expiryDateSpan.html('日期不能小於今日日期');
                    } else {
                        expiryDateSpan.html('');

                        // 計算剩餘天數，並檢查是否小於等於 3 天
                        const differenceInTime = selectedDate.getTime() - today.getTime();
                        const differenceInDays = Math.ceil(differenceInTime / (1000 * 3600 * 24));

                        if (differenceInDays <= 3) {
                            isExpiringInput.val('true');
                        } else {
                            isExpiringInput.val('false');
                        }
                    }
                });
            });
        });
    });
</script>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}