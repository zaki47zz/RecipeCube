@model RecipeCube.Areas.Admin.ViewModels.RecipeViewModel

<div class="row">
    <div class="col-xl-8 col-lg-9 col-md-10 mx-auto">
        <div class="w-100">
            <form id="createForm" asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="RecipeName" class="control-label"></label>
                    <input asp-for="RecipeName" class="form-control" />
                    <span asp-validation-for="RecipeName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="UserId" class="control-label"></label>
                    <input asp-for="UserId" class="form-control" />
                    <span asp-validation-for="UserId" class="text-danger"></span>
                </div>

                <!-- 布林值欄位改為下拉選單 -->
                <div class="form-group">
                    <label asp-for="IsCustom" class="control-label"></label>
                    <select asp-for="IsCustom" class="form-control">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                    <span asp-validation-for="IsCustom" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Restriction" class="control-label"></label>
                    <select asp-for="Restriction" class="form-control">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                    <span asp-validation-for="Restriction" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="WestEast" class="control-label"></label>
                    <select asp-for="WestEast" class="form-control">
                        <option value="true">西餐</option>
                        <option value="false">中餐</option>
                    </select>
                    <span asp-validation-for="WestEast" class="text-danger"></span>
                </div>

                <!-- Category 下拉選單 -->
                <div class="form-group">
                    <label asp-for="Category" class="control-label"></label>
                    <select asp-for="Category" class="form-control" id="categorySelect">
                        <option value="主餐">主餐</option>
                        <option value="副餐">副餐</option>
                        <option value="湯品">湯品</option>
                        <option value="甜點">甜點</option>
                    </select>
                    <span asp-validation-for="Category" class="text-danger"></span>
                </div>

                <!-- DetailedCategory 下拉選單 -->
                <div class="form-group">
                    <label asp-for="DetailedCategory" class="control-label"></label>
                    <select asp-for="DetailedCategory" class="form-control" id="detailedCategorySelect">
                        <!-- 這裡的選項會根據 Category 動態更新 -->
                    </select>
                    <span asp-validation-for="DetailedCategory" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Steps" class="control-label"></label>
                    <textarea asp-for="Steps" class="form-control" rows="5"></textarea>
                    <span asp-validation-for="Steps" class="text-danger"></span>
                </div>

                <!-- 食材選擇 -->
                <div class="form-group">
                    <label asp-for="SelectedIngredients" class="control-label">選擇食材</label>
                    <select asp-for="SelectedIngredients" class="form-control select2-multiple" id="selectedIngredients" name="SelectedIngredients" multiple="multiple">
                        @foreach (var ingredient in Model.AvailableIngredients)
                        {
                            var unit = Model.IngredientUnits.ContainsKey(ingredient.IngredientId) ? Model.IngredientUnits[ingredient.IngredientId] : "";  // 檢查單位是否存在
                            <option value="@ingredient.IngredientId">@ingredient.IngredientName</option>
                        }
                    </select>
                    <span asp-validation-for="SelectedIngredients" class="text-danger"></span>
                </div>
                <!-- 食材數量輸入框 (動態生成) -->
                <div class="form-group" id="ingredientQuantities">
                    <!-- 當選擇食材時，會在這裡動態生成數量輸入框 -->
                    @foreach (var selectedIngredient in Model.SelectedIngredients)
                    {
                        var ingredientName = Model.AvailableIngredients.FirstOrDefault(i => i.IngredientId == selectedIngredient)?.IngredientName;
                        var unit = Model.IngredientUnits.ContainsKey(selectedIngredient) ? Model.IngredientUnits[selectedIngredient] : "";

                        <div class="form-group">
                            <label for="IngredientQuantities_@selectedIngredient" class="control-label">
                                @ingredientName 的數量 (@unit)
                            </label>
                            <input type="number" step="0.1" class="form-control" id="IngredientQuantities_@selectedIngredient" name="IngredientQuantities[@selectedIngredient]" value="@Model.IngredientQuantities[selectedIngredient]" />
                        </div>
                    }
                </div>

                <div class="form-group">
                    <label asp-for="Seasoning" class="control-label"></label>
                    <input asp-for="Seasoning" class="form-control" />
                    <span asp-validation-for="Seasoning" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Visibility" class="control-label"></label>
                    <select asp-for="Visibility" class="form-control">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                    <span asp-validation-for="Visibility" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Photo" class="control-label"></label>
                    <partial name="_ShowPhotoPartial" class="col-lg-6" />
                    <input type="file" asp-for="Photo" accept="image/*" class="form-control" />
                    <span asp-validation-for="Photo" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Status" class="control-label"></label>
                    <select asp-for="Status" class="form-control">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="新增" class="btn btn-info" />
                    <a href="javascript:void(0)" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">返回</a>
                </div>
            </form>

        </div>
    </div>
</div>

<!-- 在局部檢視內包含腳本 -->
<script>
    $(document).ready(function () {
        $('#editModal, #createModal').on('shown.bs.modal', function () {
            // 在每次打開模態框之前，清除所有事件綁定，避免重複
            $('#selectedIngredients').off('change');
            $('#categorySelect').off('change');

            if ($(this).attr('id') === 'editModal') {
                initEditForm();
            } else if ($(this).attr('id') === 'createModal') {
                initCreateForm();
            }
        });

        $('.modal').on('hidden.bs.modal', function () {
            // 找到模態視窗中的表單並重置，若表單存在才進行重置操作
            var form = $(this).find('form')[0];
            if (form) {
                form.reset();
            }
            $(this).find('.modal-body').html('Loading...'); // 清空模態視窗的內容
        });

        initCreateForm();
        Image();
    });
    function initCreateForm() {

        //alert("我來自局部檢視");
        // 初始化表單驗證功能
        $.validator.unobtrusive.parse('#createForm');
        var categoryOptions = {
            "主餐": ["麵食", "飯食", "粥", "排餐", "鹹派", "火鍋", "焗烤"],
            "副餐": ["肉類料理", "青菜料理", "海鮮料理"],
            "湯品": ["無"],
            "甜點": ["甜", "鹹"]
        };

        $('#categorySelect').change(function () {
            var category = $(this).val();
            var detailedCategorySelect = $('#detailedCategorySelect');

            detailedCategorySelect.empty();

            if (categoryOptions[category]) {
                categoryOptions[category].forEach(function (option) {
                    detailedCategorySelect.append(new Option(option, option));
                });
            }
        });

        // 初始載入時觸發 change 事件
        $('#categorySelect').trigger('change');

        // 首先載入所有食材
        $.ajax({
            url: '/Admin/Recipes/GetIngredients',  // 後端控制器路徑
            type: 'GET',
            placeholder: '選擇食材',
            allowClear: true,
            width: '100%',
            success: function (data) {
                // console.log(data); // 確認是否包含 ingredientName 和 unit
                initSelect2(data);  // 初始化 Select2 並傳入 data
            },
            error: function () {
                alert('無法從資料庫中載入食材');
            }
        });

        // 當使用者選擇食材時
        $('#selectedIngredients').on('change', function () {
            var selectedIngredients = $(this).select2('data');  // 獲取已選擇的食材
            var ingredientQuantitiesDiv = $('#ingredientQuantities');

            // 創建一個對象來保存已選擇的食材數量
            var existingQuantities = {};

            // 保留當前已輸入的食材數量
            ingredientQuantitiesDiv.find('input').each(function () {
                var ingredientId = $(this).attr('id').split('_')[1];
                var quantity = $(this).val();
                existingQuantities[ingredientId] = quantity;
            });

            // 清空原有的數量輸入框
            ingredientQuantitiesDiv.empty();

            // 為每個選擇的食材創建一個對應的數量輸入框，顯示名稱和單位
            selectedIngredients.forEach(function (ingredient) {
                var ingredientId = ingredient.id;
                var ingredientName = ingredient.text;
                var unit = ingredient.unit ? ` ${ingredient.unit}` : '';  // 直接從選項數據中獲取單位

                // 如果之前已經有這個食材的數量，則保留
                var quantity = existingQuantities[ingredientId] || '';

                var inputHtml = `
                <div class="form-group">
                    <label for="IngredientQuantities_${ingredientId}" class="control-label">${ingredientName} 的數量：${unit}</label>
                    <input type="number" step="0.1" class="form-control" id="IngredientQuantities_${ingredientId}" name="IngredientQuantities[${ingredientId}]" value="${quantity}" />
                </div>`;
                ingredientQuantitiesDiv.append(inputHtml);
            });
        });



    }
    function initSelect2(ingredients) {
        $('#selectedIngredients').select2({
            placeholder: '選擇食材',
            allowClear: true,
            width: '100%',
            data: ingredients.map(function (ingredient) {
                var unitText = ingredient.unit ? ` (${ingredient.unit})` : ''; // 如果有單位，顯示單位
                // console.log("前:", ingredient.ingredientName, unitText);

                return {
                    id: ingredient.ingredientId,
                    text: ingredient.ingredientName + unitText,
                    unit: ingredient.unit // 把單位信息綁定到選項的數據上
                };
            }),
            ajax: {
                url: '/Admin/Recipes/SearchIngredients',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        query: params.term // 搜尋的關鍵字
                    };
                },
                processResults: function (data) {
                    var categories = {};
                    data.forEach(function (ingredient) {
                        if (!categories[ingredient.category]) {
                            categories[ingredient.category] = [];
                        }
                        var unitText = ingredient.unit ? ` (${ingredient.unit})` : ''; // 確認單位存在
                        // console.log("後:", ingredient.ingredientName, unitText);

                        categories[ingredient.category].push({
                            id: ingredient.ingredientId,
                            text: ingredient.ingredientName + unitText,
                            unit: ingredient.unit  // 把單位信息綁定到選項的數據上
                        });
                    });

                    var results = [];
                    for (var category in categories) {
                        results.push({
                            text: category,
                            children: categories[category]
                        });
                    }

                    return {
                        results: results
                    };
                },
                cache: true
            }
        });
    }

    function Image() {
        // 預覽上傳的圖檔
        function previewImage(inputFile) {
            if (inputFile.files && inputFile.files[0]) {
                var file = inputFile.files[0];
                var allowTypes = "image.*";

                if (file.type.match(allowTypes)) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        // 使用你指定的 img 元素 id 'Photo'
                        $("#Photo").attr("src", e.target.result);
                        $("#Photo").attr("title", file.name);
                    };

                    reader.readAsDataURL(file);
                    $(".btn.btn-primary").prop("disabled", false); // 啟用按鈕
                } else {
                    alert("不允許的檔案上傳類型");
                    $(".btn.btn-primary").prop("disabled", true); // 禁用按鈕
                    inputFile.value = "";
                    $("#Photo").attr("src", "@Url.Content("~/img/icon_large.png")");
                    $("#Photo").attr("title", "尚無圖檔");
                }
            }
        }

        // 綁定圖片上傳變更事件，使用 input 元素的 id
        $("input[type='file'][id='Photo']").on("change", function () {
            previewImage(this);
        });
    }

</script>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}