@model RecipeCube.Areas.Admin.ViewModels.RecipeViewModel

<div class="row">
    <div class="col-xl-8 col-lg-9 col-md-10 mx-auto">
        <div class="w-100">
            <form id="createForm" asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="RecipeName" class="control-label"></label>
                    <input asp-for="RecipeName" class="form-control" />
                    <span asp-validation-for="RecipeName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="UserId" class="control-label"></label>
                    <input asp-for="UserId" class="form-control" value="0"/>
                    <span asp-validation-for="UserId" class="text-danger"></span>
                </div>

                <!-- 布林值欄位改為下拉選單 -->
                <div class="form-group">
                    <label asp-for="IsCustom" class="control-label"></label>
                    <select asp-for="IsCustom" class="form-control">
                        <option value="true">自訂食譜</option>
                        <option value="false" selected>非自訂食譜</option>
                    </select>
                    <span asp-validation-for="IsCustom" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Restriction" class="control-label"></label>
                    <select asp-for="Restriction" class="form-control">
                        <option value="true">素</option>
                        <option value="false" selected>葷</option>
                    </select>
                    <span asp-validation-for="Restriction" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="WestEast" class="control-label"></label>
                    <select asp-for="WestEast" class="form-control">
                        <option value="true">西式</option>
                        <option value="false" selected>中式</option>
                    </select>
                    <span asp-validation-for="WestEast" class="text-danger"></span>
                </div>

                <!-- Category 下拉選單 -->
                <div class="form-group">
                    <label asp-for="Category" class="control-label"></label>
                    <select asp-for="Category" class="form-control" id="categorySelect">
                        <option value="主餐">主餐</option>
                        <option value="副餐">副餐</option>
                        <option value="湯品">湯品</option>
                        <option value="甜點">甜點</option>
                    </select>
                    <span asp-validation-for="Category" class="text-danger"></span>
                </div>

                <!-- DetailedCategory 下拉選單 -->
                <div class="form-group">
                    <label asp-for="DetailedCategory" class="control-label"></label>
                    <select asp-for="DetailedCategory" class="form-control" id="detailedCategorySelect">
                        <!-- 這裡的選項會根據 Category 動態更新 -->
                    </select>
                    <span asp-validation-for="DetailedCategory" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Steps" class="control-label"></label>
                    <textarea asp-for="Steps" class="form-control" rows="5"></textarea>
                    <span asp-validation-for="Steps" class="text-danger"></span>
                </div>

                <!-- 食材選擇 -->
                <div class="form-group">
                    <label asp-for="SelectedIngredients" class="control-label">選擇食材</label>
                    <select asp-for="SelectedIngredients" class="form-control select2-multiple" id="selectedIngredients" name="SelectedIngredients" multiple="multiple">
                        @foreach (var ingredient in Model.AvailableIngredients)
                        {
                            var unit = Model.IngredientUnits.ContainsKey(ingredient.IngredientId) ? Model.IngredientUnits[ingredient.IngredientId] : "";  // 檢查單位是否存在
                            <option value="@ingredient.IngredientId">@ingredient.IngredientName</option>
                        }
                    </select>
                    <span asp-validation-for="SelectedIngredients" class="text-danger"></span>
                </div>
                <!-- 食材數量輸入框 (動態生成) -->
                <div class="form-group" id="ingredientQuantities">
                    <!-- 當選擇食材時，會在這裡動態生成數量輸入框 -->
                    @foreach (var selectedIngredient in Model.SelectedIngredients)
                    {
                        var ingredientName = Model.AvailableIngredients.FirstOrDefault(i => i.IngredientId == selectedIngredient)?.IngredientName;
                        var unit = Model.IngredientUnits.ContainsKey(selectedIngredient) ? Model.IngredientUnits[selectedIngredient] : "";

                        <div class="form-group">
                            <label for="IngredientQuantities_@selectedIngredient" class="control-label">
                                @ingredientName 的數量 (@unit)
                            </label>
                            <input type="number" step="0.1" class="form-control" id="IngredientQuantities_@selectedIngredient" name="IngredientQuantities[@selectedIngredient]" value="@Model.IngredientQuantities[selectedIngredient]" />
                        </div>
                    }
                </div>

                <div class="form-group">
                    <label asp-for="Seasoning" class="control-label"></label>
                    <input asp-for="Seasoning" class="form-control" />
                    <span asp-validation-for="Seasoning" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Visibility" class="control-label"></label>
                    <select asp-for="Visibility" class="form-control">
                        <option value="true">私有</option>
                        <option value="false" selected>全部人可見</option>
                    </select>
                    <span asp-validation-for="Visibility" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Photo" class="control-label"></label>
                    <partial name="_ShowPhotoPartial" class="col-lg-6" />
                    <input type="file" asp-for="Photo" accept="image/*" class="form-control" />
                    <span asp-validation-for="Photo" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Status" class="control-label"></label>
                    <select asp-for="Status" class="form-control">
                        <option value="true" selected>啟用</option>
                        <option value="false">停用</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>

                <div class="form-group d-flex justify-content-center">
                    <input type="submit" value="新增" class="btn btn-info me-3" />
                    <a href="javascript:void(0)" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">返回</a>
                </div>
            </form>

        </div>
    </div>
</div>

<!-- 在局部檢視內包含腳本 -->
<script>
    $(document).ready(function () {
        // 當模態框打開時進行初始化
        $('#editModal, #createModal').on('shown.bs.modal', function () {
            var modalId = $(this).attr('id');

            // 根據不同的模態框進行不同的初始化
            if (modalId === 'editModal') {
                initEditForm();
            } else if (modalId === 'createModal') {
                initCreateForm();
            }
        });

        // 當模態框關閉時進行重置
        $('.modal').on('hidden.bs.modal', function () {
            resetModal(this);
        });

        // 如果當前頁面打開的是 create 模態框，直接初始化
        initCreateForm();
        Image();  // 啟用圖片預覽功能
    });

    // 重置模態框
    function resetModal(modal) {
        var form = $(modal).find('form')[0];
        if (form) {
            form.reset();  // 重置表單
        }
        $(modal).find('.modal-body').html('Loading...');  // 清空內容
    }

    // 初始化 Create 表單
    function initCreateForm() {
        $.validator.unobtrusive.parse('#createForm');  // 初始化驗證

        initCategorySelect();  // 初始化分類選擇
        loadIngredients();  // 載入食材數據

        // 當選擇食材時動態生成數量輸入框
        $('#selectedIngredients').on('change', function () {
            generateIngredientQuantities();
        });
    }

    // 初始化分類選擇
    function initCategorySelect() {
        var categoryOptions = {
            "主餐": ["麵食", "飯食", "粥", "排餐", "鹹派", "火鍋", "焗烤"],
            "副餐": ["肉類料理", "青菜料理", "海鮮料理"],
            "湯品": ["無"],
            "甜點": ["甜", "鹹"]
        };

        $('#categorySelect').change(function () {
            var category = $(this).val();
            var detailedCategorySelect = $('#detailedCategorySelect');
            detailedCategorySelect.empty();

            if (categoryOptions[category]) {
                categoryOptions[category].forEach(function (option) {
                    detailedCategorySelect.append(new Option(option, option));
                });
            }
        });

        // 預設觸發一次選擇，載入相關數據
        $('#categorySelect').trigger('change');
    }

    // 載入食材數據並初始化 Select2
    // 使用 async/await 載入食材數據
    async function loadIngredients() {
        try {
            var response = await fetch('/Admin/Recipes/GetIngredients', {
                method: 'GET',
            });

            if (response.ok) {
                var data = await response.json();  // 將返回的數據解析為 JSON
                initSelect2(data);  // 初始化 Select2 並傳入數據
            } else {
                throw new Error('無法從伺服器獲取食材數據');
            }
        } catch (error) {
            console.error(error);
            alert('無法從資料庫中載入食材');
        }
    }

    // 初始化 Select2
    function initSelect2(ingredients) {
        $('#selectedIngredients').select2({
            placeholder: '選擇食材',
            allowClear: true,
            width: '100%',
            data: ingredients.map(function (ingredient) {
                var unitText = ingredient.unit ? ` (${ingredient.unit})` : '';
                return {
                    id: ingredient.ingredientId,
                    text: ingredient.ingredientName + unitText,
                    unit: ingredient.unit
                };
            }),
            ajax: {
                url: '/Admin/Recipes/SearchIngredients',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        query: params.term  // 搜尋的關鍵字
                    };
                },
                processResults: function (data) {
                    return {
                        results: formatIngredientData(data)  // 格式化為 Select2 的格式
                    };
                },
                cache: true
            }
        });
    }

    // 格式化食材數據
    function formatIngredientData(data) {
        var categories = {};
        data.forEach(function (ingredient) {
            if (!categories[ingredient.category]) {
                categories[ingredient.category] = [];
            }
            var unitText = ingredient.unit ? ` (${ingredient.unit})` : '';
            categories[ingredient.category].push({
                id: ingredient.ingredientId,
                text: ingredient.ingredientName + unitText,
                unit: ingredient.unit
            });
        });

        var results = [];
        for (var category in categories) {
            results.push({
                text: category,
                children: categories[category]
            });
        }
        return results;
    }

    // 動態生成食材數量輸入框
    function generateIngredientQuantities() {
        var selectedIngredients = $('#selectedIngredients').select2('data');
        var ingredientQuantitiesDiv = $('#ingredientQuantities');

        var existingQuantities = {};  // 保存當前已輸入的數量

        // 保留已輸入的數量
        ingredientQuantitiesDiv.find('input').each(function () {
            var ingredientId = $(this).attr('id').split('_')[1];
            var quantity = $(this).val();
            existingQuantities[ingredientId] = quantity;
        });

        ingredientQuantitiesDiv.empty();  // 清空舊的輸入框

        selectedIngredients.forEach(function (ingredient) {
            var ingredientId = ingredient.id;
            var ingredientName = ingredient.text;
            var unit = ingredient.unit ? ` ${ingredient.unit}` : '';
            var quantity = existingQuantities[ingredientId] || 1;

            var inputHtml = `
                    <div class="form-group">
                        <label for="IngredientQuantities_${ingredientId}" class="control-label">${ingredientName} 的數量：${unit}</label>
                        <input type="number" step="0.1" class="form-control" id="IngredientQuantities_${ingredientId}" name="IngredientQuantities[${ingredientId}]" value="${quantity}" required/>
                    </div>`;
            ingredientQuantitiesDiv.append(inputHtml);
        });

        // 重新啟用表單驗證
        $.validator.unobtrusive.parse('#createForm');
    }

    // 圖片預覽功能
    function Image() {
        function previewImage(inputFile) {
            if (inputFile.files && inputFile.files[0]) {
                var file = inputFile.files[0];
                if (file.type.match("image.*")) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("#Photo").attr("src", e.target.result);
                        $("#Photo").attr("title", file.name);
                    };
                    reader.readAsDataURL(file);
                    $(".btn.btn-primary").prop("disabled", false);
                } else {
                    alert("不允許的檔案上傳類型");
                    $(".btn.btn-primary").prop("disabled", true);
                    inputFile.value = "";
                    $("#Photo").attr("src", "@Url.Content("~/img/icon_large.png")");
                    $("#Photo").attr("title", "尚無圖檔");
                }
            }
        }

        $("input[type='file'][id='Photo']").on("change", function () {
            previewImage(this);
        });
    }
</script>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}