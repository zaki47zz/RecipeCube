@model RecipeCube.Areas.Admin.ViewModels.RecipeViewModel

<div class="row">
    <div class="col-xl-8 col-lg-9 col-md-10 mx-auto">
        <div class="w-100">
            <form id="editForm" asp-action="Edit" asp-route-id="@Model.RecipeId" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="RecipeId" />
                <div class="form-group">
                    <label asp-for="RecipeName" class="control-label"></label>
                    <input asp-for="RecipeName" class="form-control" />
                    <span asp-validation-for="RecipeName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="UserId" class="control-label"></label>
                    <input asp-for="UserId" class="form-control" />
                    <span asp-validation-for="UserId" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="IsCustom" class="control-label"></label>
                    <select asp-for="IsCustom" class="form-control">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                    <span asp-validation-for="IsCustom" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Restriction" class="control-label"></label>
                    <select asp-for="Restriction" class="form-control">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                    <span asp-validation-for="Restriction" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="WestEast" class="control-label"></label>
                    <select asp-for="WestEast" class="form-control">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                    <span asp-validation-for="WestEast" class="text-danger"></span>
                </div>

                                <!-- 種類 -->
                <div class="form-group">
                    <label asp-for="Category" class="control-label"></label>
                    <select asp-for="Category" class="form-control" id="categorySelect">
                        <option value="主餐">主餐</option>
                        <option value="副餐">副餐</option>
                        <option value="湯品">湯品</option>
                        <option value="甜點">甜點</option>
                    </select>
                    <span asp-validation-for="Category" class="text-danger"></span>
                </div>

                <!-- 種類細項 -->
                <div class="form-group">
                    <label asp-for="DetailedCategory" class="control-label"></label>
                    <select asp-for="DetailedCategory" class="form-control" id="detailedCategorySelect">
                        <!-- 根據選擇的種類自動更新 -->
                    </select>
                    <span asp-validation-for="DetailedCategory" class="text-danger"></span>
                </div>

                

                <div class="form-group">
                    <label asp-for="Steps" class="control-label"></label>
                    <textarea asp-for="Steps" class="form-control" rows="5"></textarea>
                    <span asp-validation-for="Steps" class="text-danger"></span>
                </div>

                <!-- 食材選擇 -->
                <div class="form-group">
                    <label asp-for="SelectedIngredients" class="control-label">選擇食材</label>
                    <select asp-for="SelectedIngredients" class="form-control select2-multiple" id="selectedIngredients" name="SelectedIngredients" multiple="multiple">
                        @foreach (var ingredient in Model.AvailableIngredients)
                        {
                            var isSelected = Model.SelectedIngredients.Contains(ingredient.IngredientId);
                            if (isSelected)
                            {
                                <option value="@ingredient.IngredientId" selected data-unit="@ingredient.Unit">
                                    @ingredient.IngredientName
                                </option>
                            }
                            else
                            {
                                <option value="@ingredient.IngredientId" data-unit="@ingredient.Unit">
                                    @ingredient.IngredientName
                                </option>
                            }
                        }
                    </select>
                    <span asp-validation-for="SelectedIngredients" class="text-danger"></span>
                </div>


                <!-- 食材數量輸入框 (動態生成) -->
                <div class="form-group" id="ingredientQuantities">
                    <!-- 當選擇食材時，會在這裡動態生成數量輸入框 -->
                    @foreach (var selectedIngredient in Model.SelectedIngredients)
                    {
                        <div class="form-group">
                            <label for="IngredientQuantities_@selectedIngredient" class="control-label">
                                @Model.AvailableIngredients.FirstOrDefault(i => i.IngredientId == selectedIngredient)?.IngredientName 的數量
                            </label>
                            <input type="number" step="0.1" class="form-control" id="IngredientQuantities_@selectedIngredient" name="IngredientQuantities[@selectedIngredient]" value="@Model.IngredientQuantities[selectedIngredient]" />
                        </div>
                    }
                </div>

                <div class="form-group">
                    <label asp-for="Seasoning" class="control-label"></label>
                    <input asp-for="Seasoning" class="form-control" />
                    <span asp-validation-for="Seasoning" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Visibility" class="control-label"></label>
                    <select asp-for="Visibility" class="form-control">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                    <span asp-validation-for="Visibility" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Photo" class="control-label"></label>
                    <input asp-for="Photo" class="form-control" />
                    <span asp-validation-for="Photo" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Status" class="control-label"></label>
                    <select asp-for="Status" class="form-control">
                        <option value="true">True</option>
                        <option value="false">False</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>

                <div class="form-group d-flex justify-content-center">
                    <input type="submit" value="儲存" class="btn btn-info mx-4" />
                    <a href="javascript:void(0)" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">返回</a>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        initEditForm();
    });

    function initEditForm() {
        // 初始化表單驗證功能
        $.validator.unobtrusive.parse('#editForm');

        // 設定種類和細項類別選項
        var categoryOptions = {
            "主餐": ["麵食", "飯食", "粥", "排餐", "鹹派", "火鍋", "焗烤"],
            "副餐": ["肉類料理", "青菜料理", "海鮮料理"],
            "湯品": ["無"],
            "甜點": ["甜", "鹹"]
        };

        // 初始化時根據已有的 Category 和 DetailedCategory 設置選項
        var currentCategory = $('#categorySelect').val();
        var currentDetailedCategory = decodeHtmlEntity('@Model.DetailedCategory'); // 使用解碼函數
        // 檢查目前的 Category 和 DetailedCategory
        // console.log("Current Category:", currentCategory);
        // console.log("Current DetailedCategory:", currentDetailedCategory);
        // 直接調用該方法來設置初始的細項類別選項，而不是觸發 change 事件
        updateDetailedCategoryOptions(currentCategory, currentDetailedCategory);

        // 當用戶手動改變種類時，才觸發更新細項類別選項的邏輯
        $('#categorySelect').change(function () {
            var selectedCategory = $(this).val();
            // console.log("Category changed to:", selectedCategory);
            updateDetailedCategoryOptions(selectedCategory, null);
        });

        function updateDetailedCategoryOptions(category, selectedOption) {
            var detailedCategorySelect = $('#detailedCategorySelect');
            detailedCategorySelect.empty();

            if (categoryOptions[category]) {
                // console.log("Available Detailed Categories for", category, ":", categoryOptions[category]);

                categoryOptions[category].forEach(function (option) {
                    detailedCategorySelect.append(new Option(option, option));
                });

                // 設定選擇的細項類別
                if (selectedOption) {
                    detailedCategorySelect.val(selectedOption);
                    console.log("DetailedCategory set to:", selectedOption);
                }
            }
        }

        // 初始化 Select2
        $('#selectedIngredients').select2({
            placeholder: '選擇食材',
            allowClear: true,
            width: '100%'
        });

        // 動態生成食材數量輸入框
        var initialIngredients = @Html.Raw(Json.Serialize(Model.SelectedIngredients)); // 初始已選擇的食材
        var initialQuantities = @Html.Raw(Json.Serialize(Model.IngredientQuantities)); // 初始數量

        generateIngredientQuantityInputs(initialIngredients, initialQuantities);

        $('#selectedIngredients').on('change', function () {
            var selectedIngredients = $(this).val();
            generateIngredientQuantityInputs(selectedIngredients, initialQuantities);
        });

        // 函數：生成食材數量輸入框
        function generateIngredientQuantityInputs(selectedIngredients, quantities) {
            var ingredientQuantitiesDiv = $('#ingredientQuantities');
            ingredientQuantitiesDiv.empty();

            selectedIngredients.forEach(function (ingredientId) {
                var ingredientOption = $('#selectedIngredients option[value="' + ingredientId + '"]');
                var ingredientName = ingredientOption.text();
                var unit = ingredientOption.data('unit') || ''; // 確保unit是從data-unit獲取的
                var quantity = quantities[ingredientId] || '';
                // console.log(unit);
                var inputHtml = `
                <div class="form-group">
                    <label for="IngredientQuantities_${ingredientId}" class="control-label">${ingredientName} 的數量：${unit}</label>
                    <input type="number" step="0.1" class="form-control" id="IngredientQuantities_${ingredientId}" name="IngredientQuantities[${ingredientId}]" value="${quantity}" />
                </div>`;
                ingredientQuantitiesDiv.append(inputHtml);
            });
        }



    };
    // 解決 HTML 編碼的字元無法透過js顯示
    function decodeHtmlEntity(str) {
        var txt = document.createElement("textarea");
        txt.innerHTML = str;
        return txt.value;
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}